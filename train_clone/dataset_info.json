{
  "builder_name": "code_x_glue_cc_clone_detection_big_clone_bench",
  "citation": "@inproceedings{svajlenko2014towards,\ntitle={Towards a big data curated benchmark of inter-project code clones},\nauthor={Svajlenko, Jeffrey and Islam, Judith F and Keivanloo, Iman and Roy, Chanchal K and Mia, Mohammad Mamun},\nbooktitle={2014 IEEE International Conference on Software Maintenance and Evolution},\npages={476--480},\nyear={2014},\norganization={IEEE}\n}\n\n@inproceedings{wang2020detecting,\ntitle={Detecting Code Clones with Graph Neural Network and Flow-Augmented Abstract Syntax Tree},\nauthor={Wang, Wenhan and Li, Ge and Ma, Bo and Xia, Xin and Jin, Zhi},\nbooktitle={2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)},\npages={261--271},\nyear={2020},\norganization={IEEE}\n}",
  "config_name": "default",
  "dataset_name": "code_x_glue_cc_clone_detection_big_clone_bench",
  "dataset_size": 5480096952,
  "description": "CodeXGLUE Clone-detection-BigCloneBench dataset, available at https://github.com/microsoft/CodeXGLUE/tree/main/Code-Code/Clone-detection-BigCloneBench\n\nGiven two codes as the input, the task is to do binary classification (0/1), where 1 stands for semantic equivalence and 0 for others. Models are evaluated by F1 score.\nThe dataset we use is BigCloneBench and filtered following the paper Detecting Code Clones with Graph Neural Network and Flow-Augmented Abstract Syntax Tree.",
  "download_checksums": {
    "https://raw.githubusercontent.com/madlag/CodeXGLUE/main/Code-Code/Clone-detection-BigCloneBench/dataset/train.txt": {
      "num_bytes": 17043552,
      "checksum": null
    },
    "https://raw.githubusercontent.com/madlag/CodeXGLUE/main/Code-Code/Clone-detection-BigCloneBench/dataset/data.jsonl": {
      "num_bytes": 15174797,
      "checksum": null
    },
    "https://raw.githubusercontent.com/madlag/CodeXGLUE/main/Code-Code/Clone-detection-BigCloneBench/dataset/valid.txt": {
      "num_bytes": 7861019,
      "checksum": null
    },
    "https://raw.githubusercontent.com/madlag/CodeXGLUE/main/Code-Code/Clone-detection-BigCloneBench/dataset/test.txt": {
      "num_bytes": 7876506,
      "checksum": null
    }
  },
  "download_size": 47955874,
  "features": {
    "id": {
      "dtype": "int32",
      "_type": "Value"
    },
    "id1": {
      "dtype": "int32",
      "_type": "Value"
    },
    "id2": {
      "dtype": "int32",
      "_type": "Value"
    },
    "func1": {
      "dtype": "string",
      "_type": "Value"
    },
    "func2": {
      "dtype": "string",
      "_type": "Value"
    },
    "label": {
      "dtype": "bool",
      "_type": "Value"
    }
  },
  "homepage": "https://github.com/madlag/CodeXGLUE/tree/main/Code-Code/Clone-detection-BigCloneBench",
  "license": "",
  "size_in_bytes": 5528052826,
  "splits": {
    "train": {
      "name": "train",
      "num_bytes": 2888035029,
      "num_examples": 901028,
      "shard_lengths": [
        157000,
        156000,
        156000,
        157000,
        156000,
        119028
      ],
      "dataset_name": "code_x_glue_cc_clone_detection_big_clone_bench"
    },
    "validation": {
      "name": "validation",
      "num_bytes": 1371399358,
      "num_examples": 415416,
      "shard_lengths": [
        152000,
        152000,
        111416
      ],
      "dataset_name": "code_x_glue_cc_clone_detection_big_clone_bench"
    },
    "test": {
      "name": "test",
      "num_bytes": 1220662565,
      "num_examples": 415416,
      "shard_lengths": [
        171000,
        171000,
        73416
      ],
      "dataset_name": "code_x_glue_cc_clone_detection_big_clone_bench"
    }
  },
  "supervised_keys": {
    "input": "label"
  },
  "version": {
    "version_str": "0.0.0",
    "major": 0,
    "minor": 0,
    "patch": 0
  }
}